# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more infsormation see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Basic golang CI
#env:
#  GOOS: linux
#  GOARCH: amd64
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.x
          cache: true
      - name: Install dependencies
        run: go get .
      - name: Test
        run: go test

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.x
          cache: true
      - name: Install dependencies
        run: go get .
      - name: Build
        run: go build
      - run: ls
  container:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
#      - id: "auth"
#        uses: "google-github-actions/auth@v2"
#        with:
#          credentials_json: "${{ secrets.GCP_CREDENTIALS }}" # The GCP credentials JSON SERVICE_ACCOUNT_KEY
#      - name: "Set up Cloud SDK"
#        uses: "google-github-actions/setup-gcloud@v2"
#      - name: "Use gcloud CLI"
#        run: "gcloud info"
#      - run: |-
#          gcloud --quiet auth configure-docker europe-central2-docker.pkg.dev
#      - name: Log into registry
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#      - name: Docker meta
#        id: meta
#        uses: docker/metadata-action@v5
#        with:
#          # list of Docker images to use as base name for tags
#          images: |
##            europe-central2-docker.pkg.dev/sdp-demo-388112/container-repo/fiber-mongo
#            yurikrupnik/fiber-mongo
#          # generate Docker tags based on the following events/attributes
#          tags: |
#            type=schedule
#            type=ref,event=branch
#            type=ref,event=pr
#            type=semver,pattern={{version}}
#            type=sha
#      - name: Build and push
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          push: true
#          platforms: linux/amd64,linux/arm64
#          tags: ${{ steps.meta.outputs.tags }}
#          cache-from: type=registry,ref=yurikrupnik/fiber-mongo:buildcache
#          cache-to: type=registry,ref=yurikrupnik/fiber-mongo:buildcache,mode=max
